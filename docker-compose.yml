version: "3.9"

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  communicator-db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: communicator_db
      POSTGRES_USER: "${SPRING_DATASOURCE_USERNAME}"
      POSTGRES_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
    ports:
      - "5435:5432"
    volumes:
      - communicator-data:/var/lib/postgresql/data

  social-profile-db:
    image: postgres:15
    env_file:
      - .env
    environment:
        POSTGRES_DB: social_profile_db
        POSTGRES_USER: "${SPRING_DATASOURCE_USERNAME}"
        POSTGRES_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
    ports:
      - "5434:5432"
    volumes:
      - social-profile-data:/var/lib/postgresql/data

  notification-db:
    image: postgres:15
    env_file:
      - .env
    environment:
        POSTGRES_DB: notification_db
        POSTGRES_USER: "${SPRING_DATASOURCE_USERNAME}"
        POSTGRES_PASSWORD: "${SPRING_DATASOURCE_PASSWORD}"
    ports:
      - "5433:5432"
    volumes:
      - notification-data:/var/lib/postgresql/data

  notification-handler:
    build: ./notification-handler
    ports:
      - "8446:8446"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - notification-db
      - kafka

  social-profile:
    build: ./social-profile
    ports:
      - "8445:8445"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - social-profile-db
      - kafka
      - notification-handler

  communicator:
    build: ./communicator
    ports:
      - "8444:8444"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - communicator-db
      - kafka
      - notification-handler

  auth0-service:
    build: ./auth0Service
    ports:
      - "8443:8443"
    depends_on:
      - kafka

volumes:
  communicator-data:
  social-profile-data:
  notification-data: